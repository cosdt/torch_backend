name: Build source and test

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
    paths:
      - '.github/workflows/build.yml'
      - '**/*.py'
      - '**/*.h'
      - '**/*.cpp'
      - '**/*.sh'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - '**/.gitmodules'
      - '!**/*.md'
  pull_request:
    branches:
      - 'main'
    paths:
      - '.github/workflows/build.yml'
      - '**/*.py'
      - '**/*.h'
      - '**/*.cpp'
      - '**/*.sh'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - '**/.gitmodules'
      - '!**/*.md'
  release:
    types:
      - 'published'

concurrency:
  group: '${{ github.workflow }}-${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: ${{ !contains(github.ref, 'release/')}}

jobs:
  build:
    name: Build with CANN${{ matrix.cann-version }} on Ascend${{ matrix.cann-chip }}
    runs-on: npu-arm64
    defaults:
      run:
        shell: bash -el {0}
    container:
      image: ascendai/cann:${{ matrix.cann-version }}-${{ matrix.cann-chip }}-${{ matrix.os }}-py${{ matrix.py-version }}
      volumes:
        - /usr/local/dcmi:/usr/local/dcmi
        - /usr/local/bin/npu-smi:/usr/local/bin/npu-smi
        - /usr/local/Ascend/driver/lib64/:/usr/local/Ascend/driver/lib64/
        - /usr/local/Ascend/driver/version.info:/usr/local/Ascend/driver/version.info
      options: >-
        --network host
        --device /dev/davinci7
        --device /dev/davinci_manager
        --device /dev/devmm_svm
        --device /dev/hisi_hdc
    strategy:
      fail-fast: false
      matrix:
        cann-version:
          - '8.0.rc1'
        cann-chip:
          - '910b'
        os:
          - 'ubuntu22.04'
        py-version:
          - '3.8'
    steps:
      - name: Install system dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sed -i 's|ports.ubuntu.com|mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list
          apt update
          apt install --no-install-recommends -y \
              git \
              gcc \
              g++ \
              make \
              cmake \
              ninja-build

      - name: Show versions
        run: |
          set -x
          python --version
          pip --version
          gcc --version
          g++ --version
          make --version
          cmake --version
          ninja --version

      - name: Show NPU info
        run: |
          npu-smi info

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install PyTorch
        run: |
          pip install --pre --upgrade --index-url https://download.pytorch.org/whl/nightly/cpu \
              torch==2.5.0.dev20240725

      - name: Compile source
        run: |
          export BUILD_TEST=1
          export INSTALL_TEST=1
          python setup.py develop

      - name: Run C++ test
        working-directory: ./build
        run: |
          TORCH_DIR="$(python -c 'import os, torch; print(os.path.dirname(os.path.realpath(torch.__file__)))')"
          TORCH_NPU_BUILD_DIR=$(pwd)
          export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:${TORCH_DIR}/lib/:${TORCH_NPU_BUILD_DIR}/lib/"
          echo $LD_LIBRARY_PATH
          ctest --output-on-failure --verbose
