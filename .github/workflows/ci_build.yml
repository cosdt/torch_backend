name: Build source

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
    paths:
      - '.github/workflows/ci_build.yml'
      - '**/*.py'
      - '**/*.h'
      - '**/*.cpp'
      - '**/*.sh'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - '**/.gitmodules'
      - '!**/*.md'
  pull_request:
    branches:
      - 'main'
    paths:
      - '.github/workflows/ci_build.yml'
      - '**/*.py'
      - '**/*.h'
      - '**/*.cpp'
      - '**/*.sh'
      - '**/*.cmake'
      - '**/CMakeLists.txt'
      - '**/.gitmodules'
      - '!**/*.md'
  release:
    types:
      - 'published'

concurrency:
  group: '${{ github.workflow }}-${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: ${{ !contains(github.ref, 'release/')}}

jobs:
  build:
    name: Build
    runs-on: npu-arm64
    defaults:
      run:
        shell: bash -el {0}
    container:
      image: ascendai/cann:${{ matrix.cann-version }}
      volumes:
        - /usr/local/dcmi:/usr/local/dcmi
        - /usr/local/bin/npu-smi:/usr/local/bin/npu-smi
        - /usr/local/Ascend/driver/lib64/:/usr/local/Ascend/driver/lib64/
        - /usr/local/Ascend/driver/version.info:/usr/local/Ascend/driver/version.info
      options: >-
        --network host
        --device /dev/davinci7
        --device /dev/davinci_manager
        --device /dev/devmm_svm
        --device /dev/hisi_hdc
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.8'
          - '3.9'
          - '3.10'
        cann-version:
          - '8.0'
    steps:
      - name: Show
        run: |
          echo "$GITHUB_CONTEXT"
          npu-smi info
          echo "$(pwd)"
          echo "$(whoami)"
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}

      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sed -i 's|ports.ubuntu.com|mirrors.tuna.tsinghua.edu.cn|g' /etc/apt/sources.list
          apt update
          apt install --no-install-recommends -y \
              git

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Miniconda with Python${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: torchnpu
          python-version: ${{ matrix.python-version }}

      - name: Show versions
        run: |
          conda --version
          python --version
          pip --version

      - name: Install CMake
        run: |
          conda install -y cmake ninja

      - name: Install Python dependencies
        run: |
          pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install \
              attrs cython numpy decorator sympy cffi pyyaml pathlib2 psutil protobuf scipy requests absl-py          

      - name: Install PyTorch
        run: |
          pip install --pre --upgrade --index-url https://download.pytorch.org/whl/nightly/cpu \
              torch

      - name: Compile source
        run: |
          export BUILD_TEST=1
          export INSTALL_TEST=1
          export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
          python setup.py develop

      - name: Run C++ test
        working-directory: ./build
        run: |
          export LD_LIBRARY_PATH="$CONDA_PREFIX/lib/python${{ matrix.python-version }}/site-packages/torch/lib:$LD_LIBRARY_PATH"
          ctest --output-on-failure --verbose
